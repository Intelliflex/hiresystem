{"version":3,"sources":["store/actions.js","components/HireList.js","components/AddTicket.js","components/ItemList.js","components/ItemDef.js","store/reducer.js","store/create.js","App.js","serviceWorker.js","index.js"],"names":["action","type","payload","addHireTicket","hireno","name","date","total","arguments","length","undefined","key","uuid","addHireItem","desc","amount","setActiveTicket","defineItem","item","clearItem","HireList","props","dispatch","useDispatch","_useSelector","useSelector","state","tickets","newItem","pendingItem","onClickDeleteHire","e","deleteHire","react_default","a","createElement","map","ticket","concat","className","onClick","idx","AddTicket","_useState","useState","_useState2","Object","slicedToArray","setName","onSubmit","preventDefault","moment","format","placeholder","value","onChange","target","ItemList","items","activehire","settings","currenthire","filter","ItemDef","itemDef","setItem","objectSpread","defineProperty","prevItem","useRef","useEffect","_","isEqual","current","onBlur","combineReducers","toConsumableArray","newArray","find","Number","setting","store","createStore","storeReducers","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","class","src_components_HireList","components_ItemList","components_AddTicket","components_ItemDef","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07c1ac0b.chunk.js","sourcesContent":["import uuid from 'uuid'\r\n\r\n//********************\r\n//**** ACTIONS *******\r\n//********************\r\n\r\n//ACTION CREATOR HELPER FUNCTION\r\nconst action = (type, payload) => {\r\n  return { type, payload }\r\n}\r\n\r\n//ACTIONS\r\nconst CREATE_HIRE = 'CREATE_HIRE'\r\nconst DELETE_HIRE = 'DELETE_HIRE'\r\nconst ADD_ITEM = 'ADD_ITEM'\r\nconst CLEAR_ITEM = 'CLEAR_ITEM'\r\nconst SET_ACTIVE_TICKET = 'SET_ACTIVE_TICKET'\r\nconst DEFINE_ITEM = 'DEFINE_ITEM'\r\nconst GET_ITEM = 'GET_ITEM'\r\n\r\n//ACTION CREATORS\r\nexport const deleteHire = hireno => action(DELETE_HIRE, hireno)\r\nexport const addHireTicket = (hireno, name, date, total = 0) =>\r\n  action(CREATE_HIRE, {\r\n    key: uuid(),\r\n    hireno,\r\n    name,\r\n    date,\r\n    total\r\n  })\r\nexport const addHireItem = (hireno, desc, amount) =>\r\n  action(ADD_ITEM, {\r\n    key: uuid(),\r\n    hireno,\r\n    desc,\r\n    amount\r\n  })\r\n\r\nexport const setActiveTicket = hireno => action(SET_ACTIVE_TICKET, hireno)\r\nexport const defineItem = item => action(DEFINE_ITEM, item)\r\nexport const clearItem = () => action(CLEAR_ITEM)\r\nexport const getItem = () => action(GET_ITEM)\r\n","//*************************************************************\r\n//***** HIRELIST COMPONENT - Display Table of Hire Records ****\r\n//*************************************************************\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  setActiveTicket,\r\n  deleteHire,\r\n  addHireItem,\r\n  clearItem\r\n} from '../store/actions'\r\nimport './HireList.css'\r\n\r\nconst HireList = props => {\r\n  //BRING IN DISPATCH FROM REDUX STORE\r\n  const dispatch = useDispatch()\r\n\r\n  //GET DATA FROM STORE - SIMILAR TO MAPSTATETOPROPS INSIDE CONNECT (FOR CLASS BASED COMPONENTS)\r\n  //const tickets = useSelector(state => state.tickets)\r\n  //const newItem = useSelector(state => state.pendingItem)\r\n  const { tickets, newItem } = useSelector(state => ({\r\n    tickets: state.tickets,\r\n    newItem: state.pendingItem\r\n  }))\r\n\r\n  const onClickDeleteHire = (e, hireno) => {\r\n    dispatch(deleteHire({ hireno: hireno }))\r\n  }\r\n\r\n  const onClickShowHire = (e, hireno) => {\r\n    dispatch(setActiveTicket({ hireno }))\r\n  }\r\n\r\n  const onClickAddItems = (e, hireno) => {\r\n    //If new Item description and amount values are defined - then dispatch add\r\n    if (newItem.desc !== '') {\r\n      //console.log(newItem)\r\n      dispatch(addHireItem(hireno, newItem.desc, newItem.amount))\r\n      dispatch(setActiveTicket({ hireno }))\r\n      dispatch(clearItem()) //THIS PART IS NOT WORKING\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          {tickets.map(ticket => (\r\n            <tr key={`TR${ticket.hireno}`}>\r\n              <td>{ticket.hireno}</td>\r\n              <td>{ticket.name}</td>\r\n              <td>{ticket.date}</td>\r\n              <td className='td-right' key={`D${ticket.hireno}`}>\r\n                {ticket.total}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() => {\r\n                    onClickShowHire(this, ticket.hireno)\r\n                  }}\r\n                  className='btn-primary rounded'\r\n                >\r\n                  SHOW ITEMS\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() => {\r\n                    onClickAddItems(this, ticket.hireno)\r\n                  }}\r\n                  className='btn-success rounded'\r\n                >\r\n                  ADD ITEM\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() => {\r\n                    onClickDeleteHire(this, ticket.hireno)\r\n                  }}\r\n                  className='btn-danger rounded'\r\n                >\r\n                  DELETE\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HireList\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { addHireTicket } from '../store/actions'\r\n\r\nlet idx = 1004 // We are fudging this to concentrate on React-Redux\r\n\r\nconst AddTicket = props => {\r\n  //BRING IN DISPATCH OPTION FROM REDUX STORE\r\n  const dispatch = useDispatch()\r\n\r\n  //INITIALISE STATE HOOK\r\n  const [name, setName] = useState('')\r\n\r\n  //HANDLE FORM SUBMIT\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (name === '') {\r\n      return\r\n    }\r\n    dispatch(addHireTicket(idx, name, moment().format('YYYY-MM-DD'), 0))\r\n    //Clear State so it clears input fields after update\r\n    setName('')\r\n    idx++\r\n  }\r\n\r\n  const onChange = e => setName(e.target.value)\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <p>Create a new ticket by assigning name to ticket holder</p>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          placeholder='Name of Hirer'\r\n          value={name}\r\n          onChange={onChange}\r\n        />\r\n        &nbsp;\r\n        <input\r\n          type='submit'\r\n          className='btn-success rounded'\r\n          value='ADD TICKET'\r\n        />\r\n      </form>\r\n      <p />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTicket\r\n","//************************************************************\r\n//***** ITEMLIST COMPONENT - Display Table of Hire Items  ****\r\n//************************************************************\r\nimport React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst ItemList = props => {\r\n  //**** Connect to Redux State *****\r\n  const { items, activehire } = useSelector(state => ({\r\n    items: state.items,\r\n    activehire: state.settings[0].hireno\r\n  }))\r\n\r\n  const currenthire = items.filter(item => item.hireno === activehire)\r\n  if (activehire) {\r\n    return (\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            {currenthire.map(item => (\r\n              <tr key={item.hireno + \".\" + item.desc}>\r\n                <td>{item.hireno}</td>\r\n                <td>{item.desc}</td>\r\n                <td>{item.amount}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <br />\r\n      </div>\r\n    )\r\n  } else {\r\n    return <div />\r\n  }\r\n}\r\nexport default ItemList\r\n","//**************************************************************************************************\r\n//***** ITEMDEF COMPONENT - Allow entry of new Items (dispatched from button in HireList Table) ****\r\n//**************************************************************************************************\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { defineItem, clearItem } from '../store/actions'\r\nimport _ from 'lodash'\r\n\r\nconst ItemDef = props => {\r\n  //BRING IN DISPATCH FROM REDUX STORE\r\n  const dispatch = useDispatch()\r\n\r\n  //DEFINE SELECTOR - EQUIV TO MAPSTATETOPROPS\r\n  const { itemDef } = useSelector(state => ({\r\n    itemDef: state.pendingItem\r\n  }))\r\n\r\n  const [item, setItem] = useState({ desc: '', amount: 0 })\r\n\r\n  const onChange = e => {\r\n    setItem({\r\n      ...item,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const prevItem = useRef(item)\r\n  useEffect(() => {\r\n    //WE NEED TO CONDITIONALLY UPDATE BASED ON EITHER STORE BEING CHANGED DIRECTLY OR INPUT FORM CHANGING\r\n    if (!_.isEqual(item, prevItem.current)) {\r\n      //INPUT HAS CHANGED\r\n      setItem(item)\r\n    } else if (!_.isEqual(item, itemDef)) {\r\n      //REDUX STATE HAS CHANGED\r\n      setItem(itemDef)\r\n    }\r\n    prevItem.current = item\r\n  }, [item, itemDef]) //Note: item and ItemDef are passed in as second argument in order to use setItem\r\n\r\n  const clearIt = e => {\r\n    dispatch(clearItem())\r\n  }\r\n\r\n  const addIt = e => {\r\n    dispatch(defineItem({ desc: 'MY NEW ITEM', amount: 222 }))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        Define new items to be added below - before clicking Add Item tp Input\r\n      </p>\r\n      <input\r\n        value={item.desc}\r\n        type='text'\r\n        name='desc'\r\n        placeholder='Description of Item'\r\n        onChange={onChange}\r\n        //Use onBlur Event so that changes are only submitted to store when field loses focus\r\n        onBlur={e => dispatch(defineItem(item))}\r\n      />\r\n      &nbsp;\r\n      <input\r\n        value={item.amount}\r\n        type='number'\r\n        name='amount'\r\n        placeholder='Amount'\r\n        onChange={onChange}\r\n        //Use onBlur Event so that changes are only submitted to store when field loses focus\r\n        onBlur={e => dispatch(defineItem(item))}\r\n      />\r\n      &nbsp;\r\n      <button onClick={clearIt} className='btn-warning rounded'>\r\n        CLEAR ITEM\r\n      </button>\r\n      &nbsp;\r\n      <button onClick={addIt} className='btn-success rounded'>\r\n        ADD ITEM TO INPUT\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDef\r\n","//*******************\r\n//**** REDUCERS *****\r\n//*******************\r\n//IMPORT COMBINE FUNCTION FROM REDUX\r\nimport { combineReducers } from 'redux'\r\n\r\nconst tickets = (ticket = [], action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_HIRE':\r\n      return [...ticket, action.payload]\r\n    case 'DELETE_HIRE':\r\n      //Return a new array with Delete Hireno Removed\r\n      return ticket.filter(ticket => ticket.hireno !== action.payload.hireno)\r\n    case 'ADD_ITEM':\r\n      //Add to the Hire Total - we Cannot modify store directly so we need to make a copy\r\n      let newArray = [...ticket]\r\n      newArray.find(\r\n        newArray => newArray.hireno === action.payload.hireno\r\n      ).total += Number(action.payload.amount)\r\n      return newArray\r\n    default:\r\n      return ticket\r\n  }\r\n}\r\n\r\nconst items = (item = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return [...item, action.payload]\r\n    case 'DELETE_HIRE':\r\n      //Return Array with deleted hireno removed\r\n      let newArray = [...item]\r\n      return newArray.filter(\r\n        newArray => newArray.hireno !== action.payload.hireno\r\n      )\r\n    case 'GET_ITEM':\r\n      return [...item, action.payload]\r\n    default:\r\n      return item\r\n  }\r\n}\r\n\r\nconst pendingItem = (items = { desc: '', amount: 0 }, action) => {\r\n  switch (action.type) {\r\n    case 'DEFINE_ITEM':\r\n      return action.payload\r\n    case 'CLEAR_ITEM':\r\n      return { desc: '', amount: 0 }\r\n    default:\r\n      return items\r\n  }\r\n}\r\n\r\nconst settings = (setting = [{ hireno: null }], action) => {\r\n  switch (action.type) {\r\n    case 'SET_ACTIVE_TICKET':\r\n      return [action.payload]\r\n    default:\r\n      return setting\r\n  }\r\n}\r\n//EXPORT ALL REDUCERS AS A SINGLE INSTANCE SO IT CAN BE PASSED TO STORE OBJECT\r\nexport default combineReducers({\r\n  items,\r\n  tickets,\r\n  settings,\r\n  pendingItem\r\n})\r\n","//*********************************************************\r\n//**** CREATE STORE & INITIALISE WITH STARTING VALUES *****\r\n//*********************************************************\r\nimport { createStore } from 'redux'\r\nimport storeReducers from './reducer'\r\nimport { addHireTicket, addHireItem } from './actions'\r\n\r\n//**** CREATE THE STORE AND PASS IN THE REDUCERS *****\r\n\r\nconst store = createStore(\r\n  storeReducers,\r\n  //The following code is required so the Chrome Redux Extention will work\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\n//**** LOAD STARTING VALUES INTO THE STORE ******\r\nstore.dispatch(addHireTicket(1000, 'Fred Smith', '2019-04-20'))\r\nstore.dispatch(addHireTicket(1001, 'Anne Frank', '2019-04-20'))\r\nstore.dispatch(addHireTicket(1002, 'Freda Friend', '2019-04-21'))\r\nstore.dispatch(addHireTicket(1003, 'Jerry Jones', '2019-04-21'))\r\nstore.dispatch(addHireItem(1003, 'Mini Loader', 250))\r\nstore.dispatch(addHireItem(1003, 'Hole Driller', 95))\r\nstore.dispatch(addHireItem(1000, 'Sledge Hammer', 10))\r\nstore.dispatch(addHireItem(1001, 'Angle Grinder', 15))\r\nstore.dispatch(addHireItem(1000, 'Power Saw', 25))\r\nstore.dispatch(addHireItem(1002, 'Power Saw', 25))\r\nstore.dispatch(addHireItem(1003, 'Jack Hammer', 45))\r\n\r\n//store.dispatch(defineItem({ desc: 'FROM CREATE', amount: 999 }))\r\n\r\nexport default store\r\n","//******************************************\n//****** APP.JS - Main App Entry Point *****\n//******************************************\nimport React from 'react'\nimport HireList from './components/HireList'\nimport AddTicket from './components/AddTicket'\nimport ItemList from './components/ItemList'\n// Comment Out line below for Class Based Solution\nimport ItemDef from './components/ItemDef'\n// Remove Comment on line below for CLass Based Solution\n// import ItemDefClass from './components/ItemDefClass'\n\n//THE ESSENTIAL REDUX PROVIDER\nimport { Provider } from 'react-redux'\n\n//DEFINE THE STORE\nimport store from './store/create'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className='App container m-4'>\n        <nav class='navbar navbar-dark bg-primary rounded'>\n          <h2 className='text-light'>\n            Hire Application - React-Redux Learning & Testing Module\n          </h2>\n        </nav>\n        <p />\n        <HireList />\n        <ItemList />\n        <AddTicket />\n        {/* Comment Out line below for Class Based Solution */}\n        <ItemDef />\n        {/* Remove comments on line below to use Class based Solution */}\n        {/* <ItemDefClass /> */}\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}